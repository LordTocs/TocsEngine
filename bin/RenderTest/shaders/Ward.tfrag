#version 400

#include "shaders/brdf/Ward.hglsl"

<%input vec4 Diffuse%>
<%input vec4 Specular%>
<%input vec2 Roughness%>

in vec2 TextureCoordinate;
in vec3 GeometryNormal;
in vec3 GeometryTangent;

<%definitions%>

void ShadePrep ()
{
	<%init%>
}

vec4 ConstantShading(vec4 AmbientLight)
{
	return AmbientLight * Diffuse;
}

vec4 Shade (vec3 LightDir, vec3 ViewDir, vec3 LightColor, float Attenuation)
{
	vec3 normal = normalize(GeometryNormal);
	vec3 tangent = normalize(GeometryTangent);
	return Ward (LightDir, ViewDir, LightColor, Attenuation, normal, tangent, Diffuse, Specular, Roughness);
}
